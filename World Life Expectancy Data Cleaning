-- world life expectancy data cleaning Project 

SELECT * 
FROM world_life_expectancy;

# can see missing data in status and life expetancy columns 

# Step 1 remove duplicates / find out if we have duplicates

SELECT Country, Year, CONCAT(Country,Year) 
FROM world_life_expectancy;
# As no unique ID coloum is present we can use concat to combine 2 coloumns into 1 unique one to help identify duplicates

SELECT Country, Year, CONCAT(Country,Year), COUNT(CONCAT(Country,Year))  #Count concat to identify any rows with duplicates
FROM world_life_expectancy
GROUP BY Country, Year, CONCAT(Country,Year)
HAVING COUNT(CONCAT(Country,Year)) > 1 
;
# Now to remove duplicates, we need to indentify the duplicate row IDs - can use partition by

SELECT ROW_ID, CONCAT(Country,Year),
ROW_NUMBER() OVER(PARTITION BY CONCAT(Country,Year) ORDER BY CONCAT(Country,Year)) AS Row_Num
FROM world_life_expectancy;
 # This bring ups a table which includes row_ID and the duplicates - we need to use this as our subquery 
 
SELECT *
FROM(
SELECT ROW_ID, 
CONCAT(Country,Year),
ROW_NUMBER() OVER(PARTITION BY CONCAT(Country,Year) ORDER BY CONCAT(Country,Year)) AS Row_Num
FROM world_life_expectancy) AS Row_Table
WHERE Row_Num > 1 			#Now we can filter on our subquery to select the duplicates and identify the ROW_IDs
;
# The result selects all ROW_ids with more than 1 Row_Num

#NOW we can delete the data but also make sure we have a backup unaltered table before we delete anything

DELETE FROM world_life_expectancy
WHERE Row_ID IN (
SELECT Row_ID
FROM(
SELECT ROW_ID, 
CONCAT(Country,Year),
ROW_NUMBER() OVER(PARTITION BY CONCAT(Country,Year) ORDER BY CONCAT(Country,Year)) AS Row_Num
FROM world_life_expectancy) AS Row_Table
WHERE Row_Num > 1 )	
;
# Now Rows are deleted and we can check by running the previous sript

#Missing Data in Status column - need to identifty rows with blanks instead of NULLS

SELECT *
FROM world_life_expectancy
WHERE Status = '' 
;
